[{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"format_decimal","dir":"Articles","previous_headings":"","what":"format_decimal()","title":"Format integers and decimals","text":"Given number, numerical vector, numerical column data frame, format_decimal() converts numbers character strings form, user can specify number decimal places. Arguments. x   Numerical vector formatted. Can scalar, vector, column data frame. digits   Positive integer specify number decimal places. Default 4. Zero renders number integer. big_mark   Character. empty, used mark every three digits decimal point. Applied big.mark argument formatC(). delim   Character vector length one two defining math markup delimiters. Possible values include \"$\" \"\\\\(\", create appropriate left right delimiters. Custom delimiters can assigned required one’s TeX processor. writing script follow along, use packages vignette:","code":"\"$a$\" library(\"formatdown\") library(\"data.table\") #> Warning: package 'data.table' was built under R version 4.3.2 library(\"knitr\")"},{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"practice-data-table","dir":"Articles","previous_headings":"","what":"Practice data table","title":"Format integers and decimals","text":"Using atmos data set include formatdown various atmospheric properties function height sea level.","code":"# Data set included with formatdown DT <- copy(atmos)  # Render in document knitr::kable(DT, align = \"r\")"},{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"power-of-ten-column","dir":"Articles","previous_headings":"","what":"Power-of-ten column","title":"Format integers and decimals","text":"variables, density best lends powers--ten notation. range values, fixed exponent \\(-3\\) seems work OK.","code":"# Apply power of ten notation to one column DT$dens <- format_power(DT$dens, digits = 3, set_power = -3)  # Render in document knitr::kable(DT, align = \"r\")"},{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"integer-column","dir":"Articles","previous_headings":"","what":"Integer column","title":"Format integers and decimals","text":"treat altitude integer, convert meters kilometers, format integer form (zero decimal places).","code":"# Format one column as an integer DT$alt <- format_decimal(DT$alt / 1000, 0)  # Render in document knitr::kable(DT, align = \"r\")"},{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"decimal-columns","dir":"Articles","previous_headings":"","what":"Decimal columns","title":"Format integers and decimals","text":"temperature speed sound columns can formatted one decimal place. Use lapply() format multiple columns way.","code":"# Name the columns to be formatted cols_to_format <- c(\"temp\", \"sound\")  # Use data.table .SD syntax with lapply() DT[, (cols_to_format) := lapply(.SD, function(x) format_decimal(x, 1)), .SDcols = cols_to_format]  # Render in document knitr::kable(DT, align = \"r\")"},{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"different-formats-in-different-ranges","dir":"Articles","previous_headings":"","what":"Different formats in different ranges","title":"Format integers and decimals","text":"pressure column spans several orders magnitude. format numbers differently depending range occupy. numbers thousands, add “big mark” make easier read.","code":"# Hundreds and higher, integers. Create a temporary variable DT[pres > 99, temp_pres := format_decimal(pres, 0, big_mark = \",\")]  # Units place or lower, 2 decimal places DT[pres <= 10, temp_pres := format_decimal(pres, 2)]  # In-between those two ranges, 1 decimal place DT[pres > 10 & pres <= 99, temp_pres := format_decimal(pres, 1)]  # Overwrite the original and delete the temporary column DT[, pres := temp_pres] DT[, temp_pres := NULL]  # Render in document knitr::kable(DT, align = \"r\")"},{"path":"https://graphdr.github.io/formatdown/articles/format_integers_and_decimals.html","id":"knitrkable-options","dir":"Articles","previous_headings":"","what":"knitr::kable() options","title":"Format integers and decimals","text":"use knitr::kable() arguments change header add caption. Table 1. Atmospheric varables function altitude","code":"# Render in document knitr::kable(DT,   align = \"r\",   caption = \"Table 1. Atmospheric varables as a function of altitude\",   col.names = c(     \"Altitude [km]\",     \"Temperature [K]\",     \"Pressure [Pa]\",     \"Density [kg/m$^3$]\",     \"Speed of sound [m/s]\"   ) )"},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"markup","dir":"Articles","previous_headings":"","what":"Markup","title":"Format powers of ten","text":"R Markdown Quarto Markdown, use inline equation markup delimited $ ... $ create math expression output document (\\( ... \\) also option). example, markup Avogadro’s number given , yields \\(6.0221 \\times 10^{23}\\) document. program markup, however, enclose markup character string, , requires backward slash \\ “escaped”, hence product symbol \\\\times. form output produced format_power().","code":"$6.0221 \\times 10^{23}$ \"$6.0221 \\\\times 10^{23}$\""},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"format_power","dir":"Articles","previous_headings":"","what":"format_power()","title":"Format powers of ten","text":"Given number, numerical vector, numerical column data frame, format_power() converts numbers character strings form, coefficient n exponent. user can specify number significant digits scientific engineering format. Unless otherwise specified, numbers exponents neighborhood zero excluded power ten notation converted character strings form, number decimal notation specified number significant digits. Arguments. x   Numerical vector formatted. Can scalar, vector, column data frame. digits   Positive nonzero integer specify number significant digits. Default 4. format   Possible values “engr” (engineering notation) “sci” (scientific notation). Default “engr”. omit_power   Numeric vector length two (NULL). Determines range exponents power--ten notation excluded. Default c(-1, 2). set_power   Integer assigned fixed power--ten, overriding scientific engineering formatting. Default NULL. delim   Character vector length one two defining math markup delimiters. Possible values include \"$\" \"\\\\(\", create appropriate left right delimiters. Custom delimiters can assigned required one’s TeX processor. writing script follow along, use packages vignette: Equivalent usage.   first two arguments named argument order maintained.","code":"\"$a \\\\times 10^{n}$\" \"$a$\" library(\"formatdown\") library(\"data.table\") #> Warning: package 'data.table' was built under R version 4.3.2 library(\"knitr\") # Numerical value avogadro <- 6.0221E+23  # Arguments named (x <- format_power(x = avogadro, digits = 4)) #> [1] \"$602.2 \\\\times 10^{21}$\"  # Arguments unnamed y <- format_power(avogadro, 4)  # Implicit use of default argument z <- format_power(avogadro)  # Demonstrate equivalence all.equal(x, y) #> [1] TRUE all.equal(x, z) #> [1] TRUE"},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"scalar","dir":"Articles","previous_headings":"","what":"Scalar","title":"Format powers of ten","text":"Use inline R code. , .Rmd .qmd document, rendered \\(602.2 \\times 10^{21}\\).","code":"format_power(avogadro) #> [1] \"$602.2 \\\\times 10^{21}$\""},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"vector","dir":"Articles","previous_headings":"","what":"Vector","title":"Format powers of ten","text":"rendered \\(1.222 \\times 10^{-6}\\), \\(23.33 \\times 10^{-6}\\), \\(344.4 \\times 10^{-6}\\), \\(4.111 \\times 10^{-3}\\), etc.","code":"x <- c(   1.2222e-6, 2.3333e-5, 3.4444e-4, 4.1111e-3, 5.2222e-2, 6.3333e-1,   7.4444e+0, 8.1111e+1, 9.2222e+2, 1.3333e+3, 2.4444e+4, 3.1111e+5, 4.2222e+6 ) format_power(x) #>  [1] \"$1.222 \\\\times 10^{-6}$\" \"$23.33 \\\\times 10^{-6}$\" #>  [3] \"$344.4 \\\\times 10^{-6}$\" \"$4.111 \\\\times 10^{-3}$\" #>  [5] \"$52.22 \\\\times 10^{-3}$\" \"$0.6333$\"                #>  [7] \"$7.444$\"                 \"$81.11$\"                 #>  [9] \"$922.2$\"                 \"$1.333 \\\\times 10^{3}$\"  #> [11] \"$24.44 \\\\times 10^{3}$\"  \"$311.1 \\\\times 10^{3}$\"  #> [13] \"$4.222 \\\\times 10^{6}$\""},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"significant-digits","dir":"Articles","previous_headings":"","what":"Significant digits","title":"Format powers of ten","text":"Argument named. rendered \\(1.22 \\times 10^{-6}\\) \\(1.222 \\times 10^{-6}\\)","code":"format_power(x[1], 3) #> [1] \"$1.22 \\\\times 10^{-6}$\" format_power(x[1], 4) #> [1] \"$1.222 \\\\times 10^{-6}$\""},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"format","dir":"Articles","previous_headings":"","what":"Format","title":"Format powers of ten","text":"format argument default value “engr”. included, argument must named. rendered \\(344.4 \\times 10^{-6}\\) \\(3.444 \\times 10^{-4}\\) compare effects across many orders magnitude, format example vector twice, placing results side side data frame comparison, rendered using knitr::kable(), values displayed without powers--ten notation range set omit_power argument, described next section.","code":"format_power(x[3]) #> [1] \"$344.4 \\\\times 10^{-6}$\" format_power(x[3], format = \"sci\") #> [1] \"$3.444 \\\\times 10^{-4}$\" # Compare two formats DT <- data.table(   scientific  = format_power(x, 3, format = \"sci\"),   engineering = format_power(x, 3) ) knitr::kable(DT, align = \"r\", col.names = c(\"scientific notation\", \"engineering notation\"))"},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"omit-power-notation","dir":"Articles","previous_headings":"","what":"Omit power notation","title":"Format powers of ten","text":"omit_power argument, included, must named. Suppose, example, want value 0.0678 rendered without powers--ten notation. exponent number scientific notation \\(-2\\), \\(6.780 \\times 10^{-2}\\). exponent within range set omit_power, number rendered without power--ten notation (overriding format argument). rendered \\(0.0678\\) \\(6.78 \\times 10^{-2}\\) upper limit, rendered \\(6.79 \\times 10^{3}\\) \\(6790\\) omit_power = NULL removes exceptions formats numbers power--ten notation. Suppose wish omit one specific power ten , example, let omit_power = c(-5, -5). values except 4.5e-5 formatted powers ten.","code":"format_power(0.0678, 3, format = \"sci\", omit_power = c(-2, 2)) #> [1] \"$0.0678$\" format_power(0.0678, 3, format = \"sci\", omit_power = c(-1, 2)) #> [1] \"$6.78 \\\\times 10^{-2}$\" format_power(6789, 3, format = \"sci\", omit_power = c(-1, 2)) #> [1] \"$6.79 \\\\times 10^{3}$\" format_power(6789, 3, format = \"sci\", omit_power = c(-1, 3)) #> [1] \"$6790$\" # Omit no values from power-of-ten notation DT <- data.table(   scientific  = format_power(x, 3, format = \"sci\", omit_power = NULL),   engineering = format_power(x, 3, omit_power = NULL) ) knitr::kable(DT, align = \"r\", col.names = c(\"scientific notation\", \"engineering notation\")) x <- c(3.2e-7, 4.5e-6, 4.5e-5, 6.7e-4, 3, 37800) format_power(x, 3, format = \"sci\", omit_power = c(-5, -5)) #> [1] \"$3.20 \\\\times 10^{-7}$\" \"$4.50 \\\\times 10^{-6}$\" \"$0.0000450$\"            #> [4] \"$6.70 \\\\times 10^{-4}$\" \"$3.00 \\\\times 10^{0}$\"  \"$3.78 \\\\times 10^{4}$\" format_power(x, 3, format = \"engr\", omit_power = c(-5, -5)) #> [1] \"$320 \\\\times 10^{-9}$\"  \"$4.50 \\\\times 10^{-6}$\" \"$0.0000450$\"            #> [4] \"$670 \\\\times 10^{-6}$\"  \"$3.00 \\\\times 10^{0}$\"  \"$37.8 \\\\times 10^{3}$\""},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"set-power-notation","dir":"Articles","previous_headings":"","what":"Set power notation","title":"Format powers of ten","text":"set_power argument, included, must named. values table column span orders magnitude, audience often better served setting notation constant power ten. example , show tabulated values viscosity water function temperature (water data set included formatdown). first two columns unformatted. third column, engineering format, includes exponents \\(-3\\) \\(-6\\). last column, set exponents \\(-3\\) throughout. next example, density function altitude additional columns density values formatted three ways. engr notation column engineering notation first two values decimal notation (powers ten) set power column uses power ten first two decimal values power column uses power ten throughout (decimal values)","code":"# Copy to avoid by-reference changes DT <- copy(water)  # Convert temperature from K to C DT <- DT[, .(temp = round(temp - 273.15), visc)]  # Create two columns to compare DT[, ver1 := format_power(visc, 3)] DT[, ver2 := format_power(visc, 3, set_power = -3)] knitr::kable(DT, align = \"r\", col.names = c(   \"Temperature [C]\", \"Viscosity [Pa s]\", \"engineering notation\", \"with fixed exponent\" )) DT <- copy(atmos) DT <- DT[, .(alt = alt / 1000, dens)] DT[, ver1 := format_power(dens, 3)] DT[, ver2 := format_power(dens, 3, set_power = -3)] DT[, ver3 := format_power(dens, 3, set_power = -3, omit_power = NULL)]  kable(DT, align = \"r\", col.names = c(   \"Altitude [km]\",   \"Density [kg/m$^3$]\",   \"engr notation\",   \"set power\",   \"all power\" ))"},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"delimiters","dir":"Articles","previous_headings":"","what":"Delimiters","title":"Format powers of ten","text":"delim argument, included, must named. render \\(320.0 \\times 10^{-9}\\) encountered one instance $ ... $ delimiters produce desired output—using kableExtra::kbl() create table .qmd output document. Switching delimiters \\\\( ... \\\\) fixed problem, per recommendation MathJax consortium (Cervone, 2018). rendered \\(320.0 \\times 10^{-9}\\)","code":"# Equivalent usage w <- format_power(x[1]) y <- format_power(x[1], delim = \"$\") z <- format_power(x[1], delim = c(\"$\", \"$\"))  all.equal(w, y) #> [1] TRUE all.equal(w, z) #> [1] TRUE format_power(x[1], delim = \"\\\\(\") #> [1] \"\\\\(320.0 \\\\times 10^{-9}\\\\)\" format_power(x[1], delim = c(\"\\\\(\", \"\\\\)\")) #> [1] \"\\\\(320.0 \\\\times 10^{-9}\\\\)\""},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"data-frame","dir":"Articles","previous_headings":"","what":"Data frame","title":"Format powers of ten","text":"Using air_meas, data frame included formatdown contains columns class Date, character, factor, numeric, integer. Treating column vector, rendered \\(101.1 \\times 10^{3}\\), \\(101.0 \\times 10^{3}\\), \\(101.1 \\times 10^{3}\\), \\(101.0 \\times 10^{3}\\), \\(101.1 \\times 10^{3}\\). Treating column within data frame, Using lapply() select treat multiple columns data frame, Repeat, retain columns,","code":"# Included with formatdown air_meas #>          date  trial  humid  temp   pres sp_gas  dens #>        <Date> <char> <fctr> <num>  <num>  <int> <num> #> 1: 2018-06-12      a    low 294.1 101100    287 1.198 #> 2: 2018-06-13      b   high 294.1 101000    287 1.196 #> 3: 2018-06-14      c    med 294.6 101100    287 1.196 #> 4: 2018-06-15      d    low 293.4 101000    287 1.200 #> 5: 2018-06-16      e   high 293.9 101100    287 1.199  # Render in document knitr::kable(air_meas, align = \"r\") # Copy to avoid \"by reference\" changes to air_meas DT <- copy(air_meas)  # Format as a vector format_power(DT$pres, digits = 4) #> [1] \"$101.1 \\\\times 10^{3}$\" \"$101.0 \\\\times 10^{3}$\" \"$101.1 \\\\times 10^{3}$\" #> [4] \"$101.0 \\\\times 10^{3}$\" \"$101.1 \\\\times 10^{3}$\" # Copy to avoid \"by reference\" changes to air_meas DT <- copy(air_meas)  # Format one column, retain all columns DT$pres <- format_power(DT$pres, digits = 4) DT[] #>          date  trial  humid  temp                   pres sp_gas  dens #>        <Date> <char> <fctr> <num>                 <char>  <int> <num> #> 1: 2018-06-12      a    low 294.1 $101.1 \\\\times 10^{3}$    287 1.198 #> 2: 2018-06-13      b   high 294.1 $101.0 \\\\times 10^{3}$    287 1.196 #> 3: 2018-06-14      c    med 294.6 $101.1 \\\\times 10^{3}$    287 1.196 #> 4: 2018-06-15      d    low 293.4 $101.0 \\\\times 10^{3}$    287 1.200 #> 5: 2018-06-16      e   high 293.9 $101.1 \\\\times 10^{3}$    287 1.199  # Render in document knitr::kable(DT, align = \"r\") # Copy to avoid \"by reference\" changes to air_meas DT <- copy(air_meas)  # Identify columns to format cols_we_want <- c(\"temp\", \"pres\", \"dens\")  # Select and format. DT <- DT[, lapply(.SD, function(x) format_power(x, 4)), .SDcols = cols_we_want] DT[] #>       temp                   pres    dens #>     <char>                 <char>  <char> #> 1: $294.1$ $101.1 \\\\times 10^{3}$ $1.198$ #> 2: $294.1$ $101.0 \\\\times 10^{3}$ $1.196$ #> 3: $294.6$ $101.1 \\\\times 10^{3}$ $1.196$ #> 4: $293.4$ $101.0 \\\\times 10^{3}$ $1.200$ #> 5: $293.9$ $101.1 \\\\times 10^{3}$ $1.199$  # Render in document knitr::kable(DT, align = \"r\") # Copy to avoid \"by reference\" changes to air_meas DT <- copy(air_meas)  # Identify columns to format cols_we_want <- c(\"temp\", \"pres\", \"dens\")  # Format selected columns, retain all columns DT <- DT[, (cols_we_want) := lapply(.SD, function(x) format_power(x, 4)), .SDcols = cols_we_want]  # Treat the gas constant with 3 digits DT$sp_gas <- format_power(DT$sp_gas, digits = 3) DT[] #>          date  trial  humid    temp                   pres sp_gas    dens #>        <Date> <char> <fctr>  <char>                 <char> <char>  <char> #> 1: 2018-06-12      a    low $294.1$ $101.1 \\\\times 10^{3}$  $287$ $1.198$ #> 2: 2018-06-13      b   high $294.1$ $101.0 \\\\times 10^{3}$  $287$ $1.196$ #> 3: 2018-06-14      c    med $294.6$ $101.1 \\\\times 10^{3}$  $287$ $1.196$ #> 4: 2018-06-15      d    low $293.4$ $101.0 \\\\times 10^{3}$  $287$ $1.200$ #> 5: 2018-06-16      e   high $293.9$ $101.1 \\\\times 10^{3}$  $287$ $1.199$  # Render in document knitr::kable(DT, align = \"r\") numbers <- c(123.456, 2e-6, 5e8, 0.23) format_power_numbers <- format_power(numbers) format_power_numbers_digits <- format_power(numbers, digits = 2) format_power_numbers_digits <- format_power(numbers, format = \"sci\", digits = 2)"},{"path":"https://graphdr.github.io/formatdown/articles/format_powers_of_ten.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Format powers of ten","text":"Davide Cervone (2018) MathJax: TeX LaTeX math delimiters, https://docs.mathjax.org/en/v2.7-latest/tex.html#tex--latex-math-delimiters. Morgan Chase (2021) Technical Mathematics, https://openoregon.pressbooks.pub/techmath/chapter/module-11-scientific-notation/.","code":""},{"path":"https://graphdr.github.io/formatdown/articles/format_units.html","id":"format_units","dir":"Articles","previous_headings":"","what":"format_units()","title":"Format units","text":"Given number, numerical vector, numerical column data frame, format_units() converts numbers character strings form, number u measurement unit. user can specify number significant digits. Arguments. x   Vector formatted, class numeric class units. Can scalar, vector, column data frame. digits   Numeric scalar, positive integer. Applied digits argument base::format(). Enough decimal places included smallest magnitude value many significant digits. unit   Character scalar, units label compatible units package. unit_form   Character scalar. Possible values “standard” (default) “implicit” (implicit exponent form). standard form, units related arithmetic symbols multiplication, division, powers, e.g., \"kg/m^3\" \"W/(m*K)\". implicit exponent form, symbols separated spaces numbers represent exponents, e.g., \"kg m-3\" \"W m-1 K-1\". big_mark   Character. Applied big.mark argument base::format(). Default \"\". period selected big_mark, decimal mark changed comma. writing script follow along, use packages vignette:","code":"\"a [u]\" library(formatdown) library(data.table) #> Warning: package 'data.table' was built under R version 4.3.2 suppressPackageStartupMessages(library(units)) #> Warning: package 'units' was built under R version 4.3.2 library(knitr)"},{"path":"https://graphdr.github.io/formatdown/articles/format_units.html","id":"scalar","dir":"Articles","previous_headings":"","what":"Scalar","title":"Format units","text":"Assign value units, Use inline R code. , .Rmd .qmd document, rendered 101300 [Pa]. 1013 [hPa].","code":"x <- 101300 units(x) <- \"Pa\" `r format_units(x)` `r format_units(x, unit = \"hPa\")`"},{"path":"https://graphdr.github.io/formatdown/articles/format_units.html","id":"vector","dir":"Articles","previous_headings":"","what":"Vector","title":"Format units","text":"atmos data set included formatdown altitude variable alt meters. columns include units metadata. Column class numeric. Assign measurement units match source values format. Results class character. intend convert units, e.g., meters kilometers, assign source measurement units using format_units(). Results numeric, class units. Convert units format. numbers change match unit conversion. Results class character.","code":"# Variable is class numeric x <- atmos$alt x #> [1]     0 10000 20000 30000 40000 50000 60000 70000 80000 class(x) #> [1] \"numeric\" x_char <- format_units(x, unit = \"m\") x_char #> [1] \"0 [m]\"     \"10000 [m]\" \"20000 [m]\" \"30000 [m]\" \"40000 [m]\" \"50000 [m]\" #> [7] \"60000 [m]\" \"70000 [m]\" \"80000 [m]\" # Assign units before formatting units(x) <- \"m\" x #> Units: [m] #> [1]     0 10000 20000 30000 40000 50000 60000 70000 80000 class(x) #> [1] \"units\" # Covert units and format as character x_char <- format_units(x, unit = \"km\") x_char #> [1] \"0 [km]\"  \"10 [km]\" \"20 [km]\" \"30 [km]\" \"40 [km]\" \"50 [km]\" \"60 [km]\" #> [8] \"70 [km]\" \"80 [km]\""},{"path":"https://graphdr.github.io/formatdown/articles/format_units.html","id":"digits","dir":"Articles","previous_headings":"","what":"Digits","title":"Format units","text":"digits argument sets number significant digits. , temperature values (K) reported 4 significant digits. values decimal form, reducing digits 3 expected effect rounding units place. However, reducing digits 2 additional effect. reduce number significant digits , apply signif() numerical values formatting format_units(). values span different orders magnitude, number significant digits applied smallest magnitude value number decimal places values set match. example, metals data set included formatdown, elastic modulus values (Pa) converted (GPa) digits = 3. Three digits applied smallest magnitude value yields “13.8 [GPa]”. Larger values formatted number decimal places. Thus larger values three digits, e.g., “206.8 [GPa]”.","code":"x <- sort(atmos$temp, decreasing = TRUE) format_units(x, digits = 4, unit = \"K\") #> [1] \"288.1 [K]\" \"270.6 [K]\" \"250.3 [K]\" \"247.0 [K]\" \"226.5 [K]\" \"223.2 [K]\" #> [7] \"219.6 [K]\" \"216.7 [K]\" \"198.6 [K]\" format_units(x, digits = 3, unit = \"K\") #> [1] \"288 [K]\" \"271 [K]\" \"250 [K]\" \"247 [K]\" \"227 [K]\" \"223 [K]\" \"220 [K]\" #> [8] \"217 [K]\" \"199 [K]\" # Values are not converted to 2 significant digits format_units(x, digits = 2, unit = \"K\") #> [1] \"288 [K]\" \"271 [K]\" \"250 [K]\" \"247 [K]\" \"227 [K]\" \"223 [K]\" \"220 [K]\" #> [8] \"217 [K]\" \"199 [K]\"  # Apply signif() before formatting format_units(signif(x, 2), unit = \"K\") #> [1] \"290 [K]\" \"270 [K]\" \"250 [K]\" \"250 [K]\" \"230 [K]\" \"220 [K]\" \"220 [K]\" #> [8] \"220 [K]\" \"200 [K]\" x <- sort(metals$elast_mod, decreasing = TRUE) units(x) <- \"Pa\" format_units(x, digits = 3, unit = \"GPa\") #> [1] \"206.8 [GPa]\" \"146.9 [GPa]\" \"117.2 [GPa]\" \"102.0 [GPa]\" \"73.1 [GPa]\"  #> [6] \"13.8 [GPa]\""},{"path":"https://graphdr.github.io/formatdown/articles/format_units.html","id":"data-frame","dir":"Articles","previous_headings":"","what":"Data frame","title":"Format units","text":"Using atmos data set include formatdown various atmospheric properties function height sea level. Formatting one column time, assigning converting units, assigning significant digits ad-hoc. numerical values column span number orders magnitude, number column smallest magnitude, e.g., pressure density last row, displayed number significant digits specified digits argument.","code":"# Data set included with formatdown DT <- copy(atmos)  # Render in document knitr::kable(DT, align = \"r\") units(DT$alt) <- \"m\" DT[, alt := format_units(alt, unit = \"km\")]  units(DT$temp) <- \"K\" DT[, temp := format_units(temp, 3, unit = \"deg_C\")]  units(DT$pres) <- \"Pa\" DT[, pres := format_units(pres, unit = \"hPa\")]  units(DT$dens) <- \"kg/m^3\" DT[, dens := format_units(dens, unit = \"g/m^3\", unit_form = \"implicit\")]  units(DT$sound) <- \"m/s\" DT[, sound := format_units(sound, 4)]  knitr::kable(   DT,   align = \"r\",   col.names = c(\"Altitude\", \"Temperature\", \"Pressure\", \"Density\", \"Speed of sound\") )"},{"path":"https://graphdr.github.io/formatdown/articles/format_units.html","id":"us-customary-units","dir":"Articles","previous_headings":"","what":"US customary units","title":"Format units","text":"table can formatted US customary units shown .","code":"# Data set included with formatdown DT <- copy(atmos)  units(DT$alt) <- \"m\" DT[, alt := format_units(alt, unit = \"ft\")]  units(DT$temp) <- \"K\" DT[, temp := format_units(temp, 2, unit = \"deg_F\")]  units(DT$pres) <- \"Pa\" DT[, pres := format_units(pres, unit = \"psi\")]  units(DT$dens) <- \"kg/m^3\" DT[, dens := format_units(dens, unit = \"lb/ft^3\", unit_form = \"implicit\")]  units(DT$sound) <- \"m/s\" DT[, sound := format_units(sound, 4, unit = \"ft/s\")]  knitr::kable(   DT,   align = \"r\",   col.names = c(\"Altitude\", \"Temperature\", \"Pressure\", \"Density\", \"Speed of sound\") )"},{"path":"https://graphdr.github.io/formatdown/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Layton. Author, maintainer.","code":""},{"path":"https://graphdr.github.io/formatdown/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Layton R (2024). formatdown: Formatting Tools 'rmarkdown' Documents. https://github.com/graphdr/formatdown/, https://graphdr.github.io/formatdown/, https://CRAN.R-project.org/package=formatdown.","code":"@Manual{,   title = {formatdown: Formatting Tools for 'rmarkdown' Documents},   author = {Richard Layton},   year = {2024},   note = {https://github.com/graphdr/formatdown/, https://graphdr.github.io/formatdown/, https://CRAN.R-project.org/package=formatdown}, }"},{"path":[]},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our pledge","title":"Contributor code of conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our standards","title":"Contributor code of conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement responsibilities","title":"Contributor code of conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor code of conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor code of conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement midfield@purdue.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement guidelines","title":"Contributor code of conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement guidelines","what":"1. Correction","title":"Contributor code of conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement guidelines","what":"2. Warning","title":"Contributor code of conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement guidelines","what":"3. Temporary Ban","title":"Contributor code of conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement guidelines","what":"4. Permanent Ban","title":"Contributor code of conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://graphdr.github.io/formatdown/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor code of conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://graphdr.github.io/formatdown/index.html","id":"formatdown-","dir":"","previous_headings":"","what":"Formatting Tools for rmarkdown Documents","title":"Formatting Tools for rmarkdown Documents","text":"Formatting Tools R Markdown Documents Provides small set tools formatting tasks creating documents R Markdown Quarto Markdown. Convert elements numerical vector character strings one several forms: powers--ten notation engineering scientific form delimited rendering inline equations; integer decimal notation delimited equation rendering; numbers measurement units (non-delimited) units selected eliminate need powers--ten scientific notation. Useful rendering numerical scalar inline R code chunk well formatting columns data frames displayed table.","code":""},{"path":"https://graphdr.github.io/formatdown/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Formatting Tools for rmarkdown Documents","text":"professional technical prose, large small numbers generally typeset using powers ten notation. example, Plank’s constant typeset 6.626 × 10−34 J/Hz rather familiar forms use communicating computers, 6.626*10^34 6.626E-34. functions package help author convert large small numbers character strings, formatted using powers--ten notation (formats) suitable use technical writing presentations. Formatting tools include: format_power() Convert elements numerical vector character strings numbers formatted using powers--ten notation scientific engineering form delimited rendering inline equations .Rmd .qmd markdown files. format_decimal() Similar , integers decimals format_units() Format vector numbers character strings measurement units appended via ‘units’ package.","code":""},{"path":"https://graphdr.github.io/formatdown/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Formatting Tools for rmarkdown Documents","text":"Scalar values.   Typically rendered inline: , .Rmd .qmd output document, rendered using inline R code Data frame.   Typically rendered table. independently format columns water data frame included formatdown. Table 1: Properties water function temperature.","code":"# Packages library(\"formatdown\") library(\"data.table\") library(\"knitr\") x <- 101300  # Scientific notation, math delimited format_power(x, digits = 4, format = \"sci\") #> [1] \"$1.013 \\\\times 10^{5}$\"  # Engineering notation, math-delimited format_power(x, digits = 4, format = \"engr\") #> [1] \"$101.3 \\\\times 10^{3}$\"  # Decimal notation, math-delimited format_decimal(x, digits = 0, big_mark = \",\") #> [1] \"$101,300$\"  # Unit notation, non-delimited units(x) <- \"Pa\" format_units(x, unit = \"hPa\") #> [1] \"1013 [hPa]\" # Extract three columns properties <- water[, .(temp, visc, bulk_mod)]  # Decimal notation properties[, temp := format_decimal(temp, 1)]  # Power-of-ten notation with fixed exponent properties[, visc := format_power(visc, set_power = -3)]  # Power-of-ten notation with 3 significant figures properties[, bulk_mod := format_power(bulk_mod, 3)]  # Unit notation properties$bulk_mod_GPa <- water$bulk_mod units(properties$bulk_mod_GPa) <- \"Pa\" properties[, bulk_mod_GPa := format_units(bulk_mod_GPa, 3, unit = \"GPa\")]  # Render in document knitr::kable(properties,   align = \"r\",   caption = \"Table 1: Properties of water as a function of temperature.\",   col.names = c(\"Temperatue [K]\", \"Viscosity [Pa-s]\", \"Bulk modulus [Pa]\", \"Bulk modulus [GPa]\") )"},{"path":"https://graphdr.github.io/formatdown/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Formatting Tools for rmarkdown Documents","text":"Install CRAN. development version can installed GitHub.","code":"install.packages(\"formatdown\") install.packages(\"pak\") pak::pkg_install(\"graphdr/formatdown\")"},{"path":"https://graphdr.github.io/formatdown/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Formatting Tools for rmarkdown Documents","text":"R (>= 3.5.0) data.table (>= 1.9.8)","code":""},{"path":"https://graphdr.github.io/formatdown/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Formatting Tools for rmarkdown Documents","text":"contribute formatdown, Please clone repo locally. Commit contribution separate branch. submit function, please use checkmate package include runtime argument checks. provide feedback report bug, Use GitHub  Issues page. Please run package unit tests report results bug report. user can run package tests installing tinytest package running: Participation open source project subject Code Conduct.","code":"# Detailed test results test_results <- tinytest::test_package(\"formatdown\") as.data.frame(test_results)"},{"path":"https://graphdr.github.io/formatdown/index.html","id":"software-credits","dir":"","previous_headings":"","what":"Software credits","title":"Formatting Tools for rmarkdown Documents","text":"R RStudio working environment rmarkdown knitr authoring tools data.table programmable syntax wrapr, checkmate, tinytest programming tools devtools pkgdown package building","code":""},{"path":"https://graphdr.github.io/formatdown/reference/air.html","id":null,"dir":"Reference","previous_headings":"","what":"Air density measurements — air","title":"Air density measurements — air","text":"table air properties room temperature, simulating multiple measurements approximately steady state,","code":""},{"path":"https://graphdr.github.io/formatdown/reference/air.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Air density measurements — air","text":"","code":"data(air, package = \"formatdown\")"},{"path":"https://graphdr.github.io/formatdown/reference/air.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Air density measurements — air","text":"Classes data.table data.frame:\t5 observations 7 variables: date Date, R class \"Date\", format YYYY-MM-DD. trial Character, label e. humidity Factor, low, medium, high. temperature Numeric, [K] pressure Numeric, atmospheric pressure [Pa] R Integer, gas constant           [J kg\\(^{-1}\\)K\\(^{-1}\\)] density Numeric, calculated air density        [kg m\\(^{-3}\\)]","code":""},{"path":"https://graphdr.github.io/formatdown/reference/air_meas.html","id":null,"dir":"Reference","previous_headings":"","what":"Air density measurements — air_meas","title":"Air density measurements — air_meas","text":"Table air properties room temperature pressure, simulating multiple measurements approximately steady state,","code":""},{"path":"https://graphdr.github.io/formatdown/reference/air_meas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Air density measurements — air_meas","text":"","code":"data(air_meas, package = \"formatdown\")"},{"path":"https://graphdr.github.io/formatdown/reference/air_meas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Air density measurements — air_meas","text":"Classes data.table data.frame:\t5 observations 7 variables: date \"Date\" class format \"YYYY-MM-DD\". trial Character, label \"\" \"e\". humid Factor, humidity, \"low\", \"med\", \"high.\" temp Numeric, measured temperature (K). pres Numeric, measured atmospheric pressure (Pa). sp_gas Numeric, specific gas constant mass form \\(R_{sp}\\), ideal gas reference value, (J kg\\(^{-1}\\)K\\(^{-1}\\)). dens Numeric, calculated air density \\(\\rho\\) = \\(p\\)\\(R_{sp}^{-1}\\)\\(T^{-1}\\) (kg m\\(^{-3}\\)).","code":""},{"path":"https://graphdr.github.io/formatdown/reference/atmos.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of standard atmosphere — atmos","title":"Properties of standard atmosphere — atmos","text":"Table atmospheric properties function altitude, sea level 80 km.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/atmos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of standard atmosphere — atmos","text":"","code":"data(atmos, package = \"formatdown\")"},{"path":"https://graphdr.github.io/formatdown/reference/atmos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Properties of standard atmosphere — atmos","text":"Classes data.table data.frame: 9 observations 5 variables: alt Numeric, altitude (m) temp Numeric, air temperature (K) pres Numeric, atmospheric pressure (Pa) dens Numeric, air density (kg m\\(^{-3}\\)) sound Numeric, speed sound (m/s)","code":""},{"path":"https://graphdr.github.io/formatdown/reference/atmos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Properties of standard atmosphere — atmos","text":"Marks' Standard Handbook Mechanical Engineers 9/e (1987) E.. Avallone T. Baumeister (ed.), \"Table 4.2.2 International Standard Atmosphere\", pp. 4-38,  McGraw-Hill, NY.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/atmosphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of standard atmosphere — atmosphere","title":"Properties of standard atmosphere — atmosphere","text":"table atmospheric properties function altitude sea level approximately 14 km.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/atmosphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of standard atmosphere — atmosphere","text":"","code":"data(atmosphere, package = \"formatdown\")"},{"path":"https://graphdr.github.io/formatdown/reference/atmosphere.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Properties of standard atmosphere — atmosphere","text":"Classes data.table data.frame: 10 observations 5 variables: alt Numeric, altitude [m] temp Numeric, air temperature [K] pres Numeric, atmospheric pressure [Pa] dens Numeric, air density [kg m\\(^{-3}\\)] spd_snd Numeric, speed sound [m/s]","code":""},{"path":"https://graphdr.github.io/formatdown/reference/formatdown-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatting Tools for R Markdown Documents — formatdown-package","title":"Formatting Tools for R Markdown Documents — formatdown-package","text":"Provides small set tools common formatting tasks writing documents R markdown Quarto markdown. Works outputs html, pdf, docx possibly others.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Format decimal or integer values — format_decimal","title":"Format decimal or integer values — format_decimal","text":"Convert elements numerical vector character strings numbers formatted using decimal notation delimited rendering inline equations R Markdown document.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format decimal or integer values — format_decimal","text":"","code":"format_decimal(x, digits = 4, ..., big_mark = NULL, delim = \"$\")"},{"path":"https://graphdr.github.io/formatdown/reference/format_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format decimal or integer values — format_decimal","text":"x Numeric vector formatted. digits Numeric scalar, decimal places report, integer 0 20. Zero returns integer. ... used, force later arguments used name. big_mark Character. empty, used mark every three digits decimal point. Applied big.mark argument formatC(). delim Character vector (length 1 2) defining delimiters marking inline math. Possible values include \"$\" \"\\\\(\", create appropriate left right delimiters. Alternatively, left right can defined explicitly character vector length two, e.g., c(\"$\", \"$\") c(\"\\\\(\", \"\\\\)\"). Custom delimiters can assigned suit markup environment. Use argument name.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format decimal or integer values — format_decimal","text":"character vector following properties: Numbers represented integer decimal notation. Elements delimited inline math markup.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_decimal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format decimal or integer values — format_decimal","text":"Given number, numerical vector, numerical column data frame, format_decimal() converts numbers character strings form, \"$$\", number decimal notation. user can specify number decimal places. Delimiters inline math markup can edited necessary. default argument fails, \"\\\\(\" alternative available. using custom delimiter suit markup environment, sure escape special symbols.","code":""},{"path":[]},{"path":"https://graphdr.github.io/formatdown/reference/format_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format decimal or integer values — format_decimal","text":"","code":"# Digits x <- c(12300400.1234, 456000) format_decimal(x, digits = 0) #> [1] \"$12300400$\" \"$456000$\"   format_decimal(x, digits = 1) #> [1] \"$12300400.1$\" \"$456000.0$\"   format_decimal(x, digits = 2) #> [1] \"$12300400.12$\" \"$456000.00$\"    # Big mark format_decimal(x, 0, big_mark = \",\") #> [1] \"$12,300,400$\" \"$456,000$\"     # Inline math delimiters x <- c(1.654321, 0.065432) format_decimal(x) #> [1] \"$1.6543$\" \"$0.0654$\" format_decimal(x, 3, delim = \"$\") #> [1] \"$1.654$\" \"$0.065$\" format_decimal(x, 3, delim = c(\"$\", \"$\")) #> [1] \"$1.654$\" \"$0.065$\" format_decimal(x, 3, delim = \"\\\\(\") #> [1] \"\\\\(1.654\\\\)\" \"\\\\(0.065\\\\)\" format_decimal(x, 3, delim = c(\"\\\\(\", \"\\\\)\")) #> [1] \"\\\\(1.654\\\\)\" \"\\\\(0.065\\\\)\"  # LaTeX-style display equation delimiters format_decimal(x, 3, delim = c(\"\\\\[\", \"\\\\]\")) #> [1] \"\\\\[1.654\\\\]\" \"\\\\[0.065\\\\]\"  # Apply to columns of a data frame (data.table syntax) DT <- atmos[, .(temp, sound)] DT[, lapply(.SD, function(x) format_decimal(x, 1))] #>       temp   sound #>     <char>  <char> #> 1: $288.1$ $340.3$ #> 2: $223.2$ $299.5$ #> 3: $216.7$ $295.1$ #> 4: $226.5$ $301.7$ #> 5: $250.3$ $317.2$ #> 6: $270.6$ $329.8$ #> 7: $247.0$ $315.1$ #> 8: $219.6$ $297.1$ #> 9: $198.6$ $282.5$"},{"path":"https://graphdr.github.io/formatdown/reference/format_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Format powers of ten — format_power","title":"Format powers of ten — format_power","text":"Convert elements numerical vector character strings numbers formatted using powers--ten notation scientific engineering form delimited rendering inline equations R Markdown document.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format powers of ten — format_power","text":"","code":"format_power(   x,   digits = 4,   ...,   format = \"engr\",   omit_power = c(-1, 2),   set_power = NULL,   delim = \"$\" )"},{"path":"https://graphdr.github.io/formatdown/reference/format_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format powers of ten — format_power","text":"x Numeric vector formatted. digits Numeric scalar 1 20 (inclusive) defining number significant digits result. ... used, force later arguments used name. format Character. Possible values \"engr\" (engineering notation) \"sci\" (scientific notation). Use argument  name. omit_power Numeric vector c(p, q) specifying range exponents power ten notation omitted, p <= q. NULL numbers formatted powers ten notation. Use argument name. set_power Numeric scalar integer. Assigned exponent overrides format. Default NULL makes notation changes. delim Character vector (length 1 2) defining delimiters marking inline math. Possible values include \"$\" \"\\\\(\", create appropriate left right delimiters. Alternatively, left right can defined explicitly character vector length two, e.g., c(\"$\", \"$\") c(\"\\\\(\", \"\\\\)\"). Custom delimiters can assigned suit markup environment. Use argument name.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format powers of ten — format_power","text":"character vector following properties: Numbers represented powers ten notation except exponents range specified omit_power Elements delimited inline math markup.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_power.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format powers of ten — format_power","text":"Given number, numerical vector, numerical column data frame, format_power() converts numbers character strings form, \"$\\\\times 10^{n}$\", coefficient n exponent. string includes markup delimiters $...$ rendering inline equation R Markdown Quarto Markdown document. user can specify minimum number significant digits scientific engineering format. Powers--ten notation omitted range exponents via omit_power numbers converted character strings form, \"$$\", number decimal notation. default omit_power = c(-1, 2) formats numbers 0.123, 1.23, 12.3, 123 decimal form. cancel exceptions convert numbers powers--ten notation, set omit_power argument NULL. Delimiters inline math markup can edited necessary. default argument fails, \"\\\\(\" alternative available. using custom delimiter suit markup environment, sure escape special symbols.","code":""},{"path":[]},{"path":"https://graphdr.github.io/formatdown/reference/format_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format powers of ten — format_power","text":"","code":"# Scalar value format_power(101100, digits = 4) #> [1] \"$101.1 \\\\times 10^{3}$\"  # Vector value x <- c(1.2222e-6, 2.3333e-5, 3.4444e-4, 4.1111e-3, 5.2222e-2, 6.3333e-1,        7.4444e+0, 8.1111e+1, 9.2222e+2, 1.3333e+3, 2.4444e+4, 3.1111e+5, 4.2222e+6) format_power(x) #>  [1] \"$1.222 \\\\times 10^{-6}$\" \"$23.33 \\\\times 10^{-6}$\" #>  [3] \"$344.4 \\\\times 10^{-6}$\" \"$4.111 \\\\times 10^{-3}$\" #>  [5] \"$52.22 \\\\times 10^{-3}$\" \"$0.6333$\"                #>  [7] \"$7.444$\"                 \"$81.11$\"                 #>  [9] \"$922.2$\"                 \"$1.333 \\\\times 10^{3}$\"  #> [11] \"$24.44 \\\\times 10^{3}$\"  \"$311.1 \\\\times 10^{3}$\"  #> [13] \"$4.222 \\\\times 10^{6}$\"   # Compare significant digits format_power(x[1], 3) #> [1] \"$1.22 \\\\times 10^{-6}$\" format_power(x[1], 4) #> [1] \"$1.222 \\\\times 10^{-6}$\"  # Compare format type format_power(x[3], format = \"engr\") #> [1] \"$344.4 \\\\times 10^{-6}$\" format_power(x[3], format = \"sci\") #> [1] \"$3.444 \\\\times 10^{-4}$\"  # Compare set_power results format_power(x[3], set_power = -5) #> [1] \"$34.44 \\\\times 10^{-5}$\" format_power(x[3], set_power = -4) #> [1] \"$3.444 \\\\times 10^{-4}$\" format_power(x[3], set_power = -3) #> [1] \"$0.3444 \\\\times 10^{-3}$\"  # Compare omit_power range format_power(x[6], omit_power = c(-1, 2)) #> [1] \"$0.6333$\" format_power(x[6], omit_power = c(0, 2)) #> [1] \"$633.3 \\\\times 10^{-3}$\" format_power(x[8]) #> [1] \"$81.11$\" format_power(x[8], omit_power = NULL) #> [1] \"$81.11 \\\\times 10^{0}$\"  # Apply to columns of a data frame (data.table syntax) y <- x[1:6] z <- x[8:13] DT <- data.table::data.table(y, z) DT[, lapply(.SD, function(x) format_power(x))] #>                          y                      z #>                     <char>                 <char> #> 1: $1.222 \\\\times 10^{-6}$                $81.11$ #> 2: $23.33 \\\\times 10^{-6}$                $922.2$ #> 3: $344.4 \\\\times 10^{-6}$ $1.333 \\\\times 10^{3}$ #> 4: $4.111 \\\\times 10^{-3}$ $24.44 \\\\times 10^{3}$ #> 5: $52.22 \\\\times 10^{-3}$ $311.1 \\\\times 10^{3}$ #> 6:                $0.6333$ $4.222 \\\\times 10^{6}$"},{"path":"https://graphdr.github.io/formatdown/reference/format_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Format values with measurement units — format_units","title":"Format values with measurement units — format_units","text":"Format vector numbers character strings measurement units appended via 'units' package.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format values with measurement units — format_units","text":"","code":"format_units(   x,   digits = 1,   ...,   unit = NULL,   unit_form = NULL,   big_mark = NULL )"},{"path":"https://graphdr.github.io/formatdown/reference/format_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format values with measurement units — format_units","text":"x Vector class numeric class units. digits Numeric scalar, positive integer. Applied digits argument base::format(). Enough decimal places included smallest magnitude value many significant digits. ... used, force later arguments used name. unit Character scalar, units label compatible 'units' package. x class numeric, transform class units unit measurement units. x class units, convert unit measurement units. empty, existing class units retained. unit_form Character scalar. Possible values \"standard\" (default) \"implicit\" (implicit exponent form). standard form, units related arithmetic symbols multiplication, division, powers, e.g., \"kg/m^3\" \"W/(m*K)\". implicit exponent form, symbols separated spaces numbers represent exponents, e.g., \"kg m-3\" \"W m-1 K-1\". big_mark Character. Applied big.mark argument base::format(). Default \"\". period selected big_mark, decimal mark changed comma.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format values with measurement units — format_units","text":"character vector numbers appended measurement units.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/format_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format values with measurement units — format_units","text":"function wrapper units::as_units() base::format(). Numeric class input converted units class. Units class input, convertible, converted specified measurement units; none specified, existing measurement units retained. result cases converted class character using base::format() preset arguments: trim = TRUE scientific = FALSE. output form \"[u]\", number decimal notation u measurement units label.","code":""},{"path":[]},{"path":"https://graphdr.github.io/formatdown/reference/format_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format values with measurement units — format_units","text":"","code":"# Scalar value, class numeric x <- 101300 format_units(x, unit = \"Pa\") #> [1] \"101300 [Pa]\"  # Scalar value, class units x <- 101300 units(x) <- \"Pa\" format_units(x, unit = \"hPa\") #> [1] \"1013 [hPa]\" format_units(x, digits = 3, unit = \"psi\") #> [1] \"14.7 [psi]\"  # Vectors (atmos and metals data included in formatdown) x <- atmos$dens units(x) <- \"kg/m^3\" format_units(x, unit = \"g/m^3\") #> [1] \"1230.00 [g/m^3]\" \"414.00 [g/m^3]\"  \"88.90 [g/m^3]\"   \"18.40 [g/m^3]\"   #> [5] \"4.00 [g/m^3]\"    \"1.03 [g/m^3]\"    \"0.31 [g/m^3]\"    \"0.08 [g/m^3]\"    #> [9] \"0.02 [g/m^3]\"    format_units(x, unit = \"g/m^3\", unit_form = \"implicit\") #> [1] \"1230.00 [g m-3]\" \"414.00 [g m-3]\"  \"88.90 [g m-3]\"   \"18.40 [g m-3]\"   #> [5] \"4.00 [g m-3]\"    \"1.03 [g m-3]\"    \"0.31 [g m-3]\"    \"0.08 [g m-3]\"    #> [9] \"0.02 [g m-3]\"     x <- atmos$pres units(x) <- \"Pa\" format_units(x, big_mark = \",\") #> [1] \"101,300 [Pa]\" \"26,500 [Pa]\"  \"5,529 [Pa]\"   \"1,197 [Pa]\"   \"287 [Pa]\"     #> [6] \"80 [Pa]\"      \"22 [Pa]\"      \"5 [Pa]\"       \"1 [Pa]\"       format_units(x, unit = \"hPa\") #> [1] \"1013.00 [hPa]\" \"265.00 [hPa]\"  \"55.29 [hPa]\"   \"11.97 [hPa]\"   #> [5] \"2.87 [hPa]\"    \"0.80 [hPa]\"    \"0.22 [hPa]\"    \"0.05 [hPa]\"    #> [9] \"0.01 [hPa]\"     x <- metals$thrm_cond units(x) <- \"W m-1 K-1\" format_units(x, digits = 2) #> [1] \"155.8 [W/K/m]\" \"392.9 [W/K/m]\" \"37.0 [W/K/m]\"  \"69.2 [W/K/m]\"  #> [5] \"46.7 [W/K/m]\"  \"7.4 [W/K/m]\"   format_units(x, digits = 2, unit_form = \"implicit\") #> [1] \"155.8 [W K-1 m-1]\" \"392.9 [W K-1 m-1]\" \"37.0 [W K-1 m-1]\"  #> [4] \"69.2 [W K-1 m-1]\"  \"46.7 [W K-1 m-1]\"  \"7.4 [W K-1 m-1]\""},{"path":"https://graphdr.github.io/formatdown/reference/metals.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of metals — metals","title":"Properties of metals — metals","text":"Table mechanical thermal properties selected metals.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/metals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of metals — metals","text":"","code":"data(metals, package = \"formatdown\")"},{"path":"https://graphdr.github.io/formatdown/reference/metals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Properties of metals — metals","text":"Classes data.table data.frame:\t6 observations  5 variables: metal Character, name material dens Numeric, density (kg m\\(^{-3}\\)) thrm_exp Numeric, coefficient thermal expansion (m m\\(^{-1}\\)K\\(^{-1}\\)) thrm_cond Numeric, thermal conductivity (W m\\(^{-1}\\)K\\(^{-1}\\)) elast_mod Numeric, modulus elasticity (Pa)","code":""},{"path":"https://graphdr.github.io/formatdown/reference/metals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Properties of metals — metals","text":"Marks' Standard Handbook Mechanical Engineers 9/e (1987) E.. Avallone T. Baumeister (ed.), \"Basic Properties Several Metals\", pp. 6-11,  McGraw-Hill, NY.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/water.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of water — water","title":"Properties of water — water","text":"Table water properties atmospheric pressure function temperature.","code":""},{"path":"https://graphdr.github.io/formatdown/reference/water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of water — water","text":"","code":"data(water, package = \"formatdown\")"},{"path":"https://graphdr.github.io/formatdown/reference/water.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Properties of water — water","text":"Classes data.table data.frame:\t11 observations 5 variables: temp Numeric, temperature (K) dens Numeric, density (kg m\\(^{-3}\\)) sp_wt Numeric, specific weight (N m\\(^{-3}\\)) visc Numeric, dynamic viscosity (Pa s) bulk_mod Numeric, bulk modulus (Pa)","code":""},{"path":"https://graphdr.github.io/formatdown/reference/water.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Properties of water — water","text":"E. Maurer E . Embry (2022) hydraulics: Basic Pipe Open Channel Hydraulics, R package ver. 0.6.0, https://edm44.github.io/hydraulics/.","code":""},{"path":"https://graphdr.github.io/formatdown/news/index.html","id":"formatdown-0129000-development-version","dir":"Changelog","previous_headings":"","what":"formatdown 0.1.2.9000 (development version)","title":"formatdown 0.1.2.9000 (development version)","text":"2024–02–27 add package alias correct issue numbers < machine eps correct issue omit_power() argument add signif() enforce significant digits output applying formatC() update vignettes reflect changes","code":""},{"path":"https://graphdr.github.io/formatdown/news/index.html","id":"formatdown-012","dir":"Changelog","previous_headings":"","what":"formatdown 0.1.2","title":"formatdown 0.1.2","text":"2023–06–21 Add arguments delim set_power format_power(). Fixed bug remove extra spaces added formatC(). Add data sets atmos, metals, water. Rename density data set air_meas. Add format_decimal() vignette. Add format_units() vignette.","code":""},{"path":"https://graphdr.github.io/formatdown/news/index.html","id":"formatdown-011","dir":"Changelog","previous_headings":"","what":"formatdown 0.1.1","title":"formatdown 0.1.1","text":"2022-11-21 Initial CRAN release","code":""}]
